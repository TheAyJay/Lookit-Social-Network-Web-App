const newMessage = (msg, id) => {
    return (
        `<div class='message ${msg.sender.uid === id && 'self'}'>
        <div class='message-text'>${msg.text}</div>
        <div class='message-sender'>- ${msg.sender.name}</div>
    </div>`
    )
}

const displayNewMessage = (currentChatterId, msg) => {
    const userDiv = document.getElementById('user-id');
    const id = userDiv.dataset.id;
    if (![currentChatterId, id].includes(msg.sender.uid)) { return; }
    const newNode = document.createElement("div")
    newNode.innerHTML = newMessage(msg, id)
    const messageDiv = document.getElementById('messages')
    messageDiv.appendChild(newNode)
    messageDiv.scrollTop = messageDiv.scrollHeight
}

const addMessageListener = id => {
    console.log("In addMessageListener");
    CometChat.addMessageListener(
        'listener_id',
        new CometChat.MessageListener({
            onTextMessageReceived: textMessage => displayNewMessage(id, textMessage)
        })
)}

const loginUser = () => {
    const userDiv = document.getElementById('user-id');
    if (!userDiv) { return true }
    const id = userDiv.dataset.id;
    // CometChat.logout()
    CometChat.login(id, '<%= ENV['COMETCHAT_API_KEY'] %>').then(
        User => {
        const messageDiv = document.getElementById('messages');
        messageDiv.innerHTML = `<div class="whisper">Choose a  user to start chatting</div>`;
    },
    error => {
        console.log("Login failed with exception:", {error});
    })
}

const setUserListeners = () => {
    const users = document.getElementsByName('user-select');
    users.forEach(u => u.addEventListener("click", e => {
        const id = e.target.id || e.target.offsetParent.id
        setUser(id);
        fetchMessages(id);
    }))
}

const initializeChat = () => {
    CometChat.init('<%= ENV['COMETCHAT_APP_ID'] %>').then(
        hasInitialized => {
            loginUser()
        },
        error => {
            console.log("Initialization failed with error:", error);
        }
    )};

const setUser = id => {
    console.log("In setUser");
    const previousDivs = Array.from(document.getElementsByClassName('bg-info'));
    previousDivs.forEach(div => div.className = div.className.replace(/\bbg-info\b/,''));
    const userDiv = document.getElementById(id);
    userDiv.className = 'list-group-item bg-info user-select'
    addMessageListener(id)
}

const fetchMessages = id => {
    if (!id) { return; }

    const limit = 30;
    const messagesRequest = new CometChat.MessagesRequestBuilder().setUID(id).setLimit(limit).build();
    messagesRequest.fetchPrevious().then(
        messages => {
            const messageDiv = document.getElementById('messages');
            messageDiv.innerHTML = messages.length > 0 ?
              messages.map(msg => newMessage(msg, id)).join('') :
              `<div class="whisper">Start of message history</div>`;
            messageDiv.scrollTop = messageDiv.scrollHeight
        },
        error => {
            console.log("Message fetching failed with error:", error);
        }
    );
}

const sendMessage = () => {
    //Set the recipient
    const recipient_id = document.getElementsByClassName('bg-info')[0].id;
    console.log("Sending message to " + recipient_id);
    //Set the message content
    const message_text = document.getElementsByName('message[text]')[0].value;

    document.getElementsByName('message[text]')[0].value = ''

    //Set the receiver type for call
    const receiverType = CometChat.RECEIVER_TYPE.USER;
    //Create text message
    const textMessage = new CometChat.TextMessage(recipient_id, message_text, receiverType);

    CometChat.sendMessage(textMessage).then(
        message => displayNewMessage(recipient_id, message),
        error => {
            console.log("Message sending failed with error:", error);
        }
    );
}
